apiVersion: v1
kind: Namespace
metadata:
  name: sdm
  labels:
    app.kubernetes.io/name: demo-sdm
    app.kubernetes.io/part-of: demo-sdm
    app.kubernetes.io/managed-by: atomist
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-sdm
  namespace: sdm
  labels:
    app.kubernetes.io/name: demo-sdm
    app.kubernetes.io/part-of: demo-sdm
    app.kubernetes.io/managed-by: atomist
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: demo-sdm
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "secrets", "serviceaccounts", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: demo-sdm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: demo-sdm
subjects:
  - kind: ServiceAccount
    name: demo-sdm
    namespace: sdm
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: demo-sdm
  namespace: sdm
  labels:
    app.kubernetes.io/name: demo-sdm
    app.kubernetes.io/part-of: demo-sdm
    app.kubernetes.io/managed-by: atomist
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-sdm
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-sdm
        app.kubernetes.io/part-of: demo-sdm
        app.kubernetes.io/managed-by: atomist
        app.kubernetes.io/version: "1"
    spec:
      containers:
        - env:
            - name: ATOMIST_CONFIG_PATH
              value: /opt/atm/client.config.json
            - name: ATOMIST_GOAL_SCHEDULER
              value: kubernetes
            - name: HOME
              value: /home/atomist
            - name: TMPDIR
              value: /tmp
          image: atomist/demo-sdm:1.0.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 20
          name: demo-sdm
          ports:
            - name: http
              containerPort: 2866
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 20
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 500m
              memory: 1024Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true,
            runAsGroup: 2866,
            runAsNonRoot: true,
            runAsUser: 2866
          volumeMounts:
            - mountPath: /opt/atm
              name: demo-sdm
              readOnly: true
            - mountPath: /home/atomist
              name: atomist-home
            - mountPath: /tmp
              name: sdm-tmp
      initContainers:
        - args:
            - git config --global user.email 'bot@atomist.com' && git config --global user.name 'Atomist Bot'
          command: ["/bin/sh", "-c"]
          env:
            - name: HOME
              value: /home/atomist
          image: atomist/sdm-base:0.4.1
          name: atomist-home-git
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true,
            runAsGroup: 2866,
            runAsNonRoot: true,
            runAsUser: 2866
          volumeMounts:
            - mountPath: /home/atomist
              name: atomist-home
      securityContext:
        fsGroup: 2866
      serviceAccountName: demo-sdm
      volumes:
        - name: demo-sdm
          secret:
            defaultMode: 288
            secretName: demo-sdm
        - emptyDir: {}
          name: atomist-home
        - emptyDir: {}
          name: sdm-tmp
